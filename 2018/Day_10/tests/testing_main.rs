#[allow(dead_code)]
#[allow(unused_variables)]
#[path = "../src/main.rs"]
mod main;
use crate::main::NightSky;

#[test]
fn star_cluster_size_exp0() {
    assert_eq!(
        NightSky::new("./data/example_0.txt").star_cluster_size(0),
        (-6, 15, -4, 11)
    );
}

#[test]
fn message_exp0() {
    assert_eq!(NightSky::new("./data/example_0.txt").message(), 3);
}

#[test]
fn show_exp0() {
    assert_eq!(
        NightSky::new("./data/example_0.txt").show(0),
        concat!(
            "........#.............\n",
            "................#.....\n",
            ".........#.#..#.......\n",
            "......................\n",
            "#..........#.#.......#\n",
            "...............#......\n",
            "....#.................\n",
            "..#.#....#............\n",
            ".......#..............\n",
            "......#...............\n",
            "...#...#.#...#........\n",
            "....#..#..#.........#.\n",
            ".......#..............\n",
            "...........#..#.......\n",
            "#...........#.........\n",
            "...#.......#..........\n",
        )
    );
}

#[test]
fn show_exp1() {
    assert_eq!(
        NightSky::new("./data/example_0.txt").show(1),
        concat!(
            "........#....#....\n",
            "......#.....#.....\n",
            "#.........#......#\n",
            "..................\n",
            "....#.............\n",
            "..##.........#....\n",
            "....#.#...........\n",
            "...##.##..#.......\n",
            "......#.#.........\n",
            "......#...#.....#.\n",
            "#...........#.....\n",
            "..#.....#.#.......\n",
        )
    );
}

#[test]
fn show_exp2() {
    assert_eq!(
        NightSky::new("./data/example_0.txt").show(2),
        concat!(
            "..........#...\n",
            "#..#...####..#\n",
            "..............\n",
            "....#....#....\n",
            "..#.#.........\n",
            "...#...#......\n",
            "...#..#..#.#..\n",
            "#....#.#......\n",
            ".#...#...##.#.\n",
            "....#.........\n",
        )
    );
}

#[test]
fn show_exp3() {
    assert_eq!(
        NightSky::new("./data/example_0.txt").show(3),
        concat!(
            "#...#..###\n",
            "#...#...#.\n",
            "#...#...#.\n",
            "#####...#.\n",
            "#...#...#.\n",
            "#...#...#.\n",
            "#...#...#.\n",
            "#...#..###\n",
        )
    );
}

#[test]
fn show_exp4() {
    assert_eq!(
        NightSky::new("./data/example_0.txt").show(4),
        concat!(
            "........#....\n",
            "....##...#.#.\n",
            "..#.....#..#.\n",
            ".#..##.##.#..\n",
            "...##.#....#.\n",
            ".......#....#\n",
            "..........#..\n",
            "#......#...#.\n",
            ".#.....##....\n",
            "...........#.\n",
            "...........#.\n",
        )
    );
}
